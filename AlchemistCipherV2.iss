; Script generated by AI Assistant - Enhanced for Standard Features

#define MyAppName "Alchemist Cipher V2"
#define MyAppVersion "0.1.0" 
#define MyAppPublisher "Epistemophile"
; #define MyAppURL "https://example.com/" 
#define MyAppExeName "AlchemistCipherV2.exe"
; #define MyAppAssocName MyAppName + " File" ; Removed - Cannot combine defines like this
; #define MyAppAssocExt ".acf" ; Removed - Unused
; #define MyAppAssocKey StringChange(MyAppAssocName, ' ', '') + MyAppAssocExt ; Removed - Unused

; --- Source Directory (Relative to this .iss script) ---
#define MySourceDir "dist\\AlchemistCipherV2"

[Setup]
AppId={{AUTO}}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
;AppPublisherURL={#MyAppURL}
;AppSupportURL={#MyAppURL}
;AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
; Allow user to change Start Menu folder name
AllowNoIcons=yes 
; License file (create this file next to the .iss script)
LicenseFile=license.txt
; Setup Icon (ensure this .ico file exists in the specified path relative to .iss)
SetupIconFile=alchemist_cipher-V2/icons/app-logo(V2).ico
; Password protection (uncomment if needed)
;Password=yourpassword
Compression=lzma
SolidCompression=yes
WizardStyle=modern
; Run with admin privileges required for Program Files installation
PrivilegesRequired=admin 
; Optional: Add custom images to the wizard
; WizardImageFile=compiler:WizModernImage-IS.bmp
; WizardSmallImageFile=compiler:WizModernSmallImage-IS.bmp
; Output installer name
OutputBaseFilename=AlchemistCipherV2-{#MyAppVersion}-Setup
; Create an Uninstall log file
UninstallDisplayIcon={app}\{#MyAppExeName}
UninstallDisplayName={#MyAppName}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
; Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 6.1 ; Quick Launch deprecated
; Example file association task (Uncomment if needed)
; Name: "associatefiles"; Description: "Associate {#MyAppName} with {#MyAppAssocExt} files"; GroupDescription: "File Associations:"; Flags: unchecked

[Files]
; Install all files from the PyInstaller output directory
Source: "{#MySourceDir}\\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

[Registry]
; Example file association registry entries (Uncomment if needed and adjust)
; Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
; Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
; Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
; Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".{#MyAppAssocExt}"; ValueData: ""; Tasks: associatefiles

[Icons]
; Start Menu entry
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
; Optional: Subfolder for documentation/links
; Name: "{group}\Help"; Filename: "{app}"
; Name: "{group}\Help\Tutorial"; Filename: "{app}\tutorial_content.html" ; Assuming HTML viewer is associated
; Uninstall entry
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
; Desktop icon (if task selected)
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
; Quick Launch icon (if task selected and OS supports)
; Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
; Launch application after install finishes
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent 